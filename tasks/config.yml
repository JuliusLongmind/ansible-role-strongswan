---
- block:
    - name: Change to permissive value for SELinux
      selinux:
        policy: targeted
        state: permissive
      notify:
        - reboot

  when: ansible_os_family == "RedHat" and not skip_apparmor_selinux

- block:
    - name: apparmor | apply charon fix
      command: apparmor_parser -R /etc/apparmor.d/usr.lib.ipsec.charon
      changed_when: false

    - name: apparmor | apply stroke fix
      command: apparmor_parser -R /etc/apparmor.d/usr.lib.ipsec.stroke
      changed_when: false

  when: ansible_os_family == "Debian" and not skip_apparmor_selinux

- name: Configure Strongswan strongswan.conf
  template:
    src: strongswan.conf.j2
    dest: "{{ strongswan_conf_file }}"
    owner: root
    group: root
    mode: 0644
  when: strongswan_settings is defined

- name: Configure Strongswan swanctl.conf
  template:
    src: swanctl.conf.j2
    dest: "{{ strongswan_swanctl_config_file }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - swanctl restart

- name: Configure forwarding sysctl
  template:
    src: sysctl-conf.j2
    dest: "{{ sysctl_conf_file }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - sysctl reload

- name: Ensure Strongswan service is enabled and started
  systemd:
    name: "{{ strongswan_swanctl_svc }}"
    state: started
    enabled: yes
    daemon_reload: yes

# It's workaround until direct option will be added to firewalld ansible module
# https://github.com/ansible/ansible/pull/49514
- name: Skip NAT for ipsec packets with a matching IPsec policy
  shell: |
    /usr/sbin/iptables -t nat -D POSTROUTING -m policy --pol ipsec --dir out -j ACCEPT
    /usr/sbin/iptables -t nat -I POSTROUTING -m policy --pol ipsec --dir out -j ACCEPT
  when:
    - not strongswan_client
    - iptables_nat_fix
